<views:TelegramViewBase
    x:Class="TelegramClient.Views.Dialogs.DialogDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:templateSelectors="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:telegramClient="clr-namespace:TelegramClient"
    xmlns:telegramControls="clr-namespace:TelegramClient.Views.Controls"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:controls1="clr-namespace:TelegramClient.Controls"
    xmlns:dialogs="clr-namespace:TelegramClient.Views.Dialogs"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="SelfView"
    CacheMode="BitmapCache"
    mc:Ignorable="d"
    UseLayoutRounding="True"
    Background="Transparent"
    BackKeyPress="DialogDetailsView_OnBackKeyPress"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.ForegroundColor="#FFE3F4FF"
    shell:SystemTray.IsVisible="True" 
    d:DesignHeight="768" d:DesignWidth="480">

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" Text="{Binding MTProtoService.Message}"/>
    </shell:SystemTray.ProgressIndicator>

    <controls1:TelegramTransitionService.NavigationOutTransition>
        <controls1:TelegramNavigationOutTransition x:Name="OutTransition">
            <controls1:TelegramNavigationOutTransition.Forward>
                <controls1:TelegramTurnstileTransition Mode="ForwardOut"/>
            </controls1:TelegramNavigationOutTransition.Forward>
        </controls1:TelegramNavigationOutTransition>
    </controls1:TelegramTransitionService.NavigationOutTransition>

    <views:TelegramViewBase.Resources>
        <SolidColorBrush x:Key="OutputBackgroundBrushLight" Color="#FFE3F4FF"/>
        <SolidColorBrush x:Key="OutputBorderBrushLight" Color="#6686A9C9"/>
        <SolidColorBrush x:Key="OutputSubtleBrushLight" Color="#FF7C9FBA"/>
        <SolidColorBrush x:Key="InputBackgroundBrushLight" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="InputBorderBrushLight" Color="#4D86A9C9"/>
        <SolidColorBrush x:Key="InputSubtleBrushLight" Color="#FF93989D"/>

        <SolidColorBrush x:Key="OutputBackgroundBrushDark" Color="#FF2B2B2B"/>
        <SolidColorBrush x:Key="OutputBorderBrushDark" Color="#6686A9C9"/>
        <SolidColorBrush x:Key="InputBackgroundBrushDark" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="InputBorderBrushDark" Color="#4D86A9C9"/>

        <DataTemplate x:Key="ServiceMessageTemplate">
            <Grid Margin="48,12" x:Name="MainItemGrid2" Background="Transparent" micro:Message.Attach="[Event Tap] = [Action OpenServiceMessage($DataContext)]">
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu Style="{StaticResource W10MContextMenuStyle}" Loaded="ServiceMessageContextMenu_OnLoaded" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=MessagesList}" Opened="ContextMenu_OnOpened">
                        <toolkit:MenuItem Loaded="ReplyMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}}" />
                        <toolkit:MenuItem Loaded="DeleteMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}}"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Center">
                    <Border Margin="-6" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                    <StackPanel>
                        <!--<TextBlock Margin="6,0" TextAlignment="Center" TextWrapping="Wrap" FontSize="20" Text="{Binding Self, Converter={StaticResource ServiceMessageToTextConverter}}" Style="{StaticResource PhoneTextNormalStyle}"/>-->
                        <emojiPanel:TelegramRichTextBox
                            x:Name="Text"
                            Text="{Binding Self, Converter={StaticResource ServiceMessageToTextConverter}}"
                            TextAlignment="Center"
                            HorizontalAlignment="Stretch"
                            FontSize="20"
                            Foreground="{StaticResource PhoneForegroundBrush}"
                            Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1" 
                      Background="Transparent"
                      Width="100" Height="100" Margin="0,12,0,0"
                      micro:Message.Attach="[Event Tap] = [Action OpenMedia($DataContext)]"
                      Visibility="{Binding Action.Photo, Converter={StaticResource ExistsToVisibilityConverter}, FallbackValue=Collapsed}">
                    <Border Background="{StaticResource PhoneChromeBrush}"/>
                    <Image Source="{Binding Action.Photo, Converter={StaticResource DefaultPhotoConverter}, ConverterParameter=100}" Stretch="UniformToFill"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UnreadMessagesTemplate">
            <Grid Margin="30,12" x:Name="MainItemGrid2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Stretch">
                    <Border Margin="-6" Background="{StaticResource PhoneChromeBrush}" Height="48"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Margin="0,-2,6,0" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" FontSize="22.667" Text="{Binding Converter={StaticResource ServiceMessageToTextConverter}}" Style="{StaticResource PhoneTextSubtleStyle}"/>
                        <Image Source="/Images/Messages/unreadmessages.png" Width="11">
                            <Image.RenderTransform>
                                <TranslateTransform Y="2"/>
                            </Image.RenderTransform>
                        </Image>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UserTemplate">
            <Grid>
                <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                <StackPanel Margin="0,40,0,0">
                    <Grid Width="81">
                        <Image Source="{Binding EmptyDialogImageSource}" Stretch="UniformToFill"/>
                    </Grid>
                    <TextBlock Text="{Binding Resources.NoMessagesYet, Source={StaticResource Strings}}" TextWrapping="Wrap" Margin="48,40,48,0" FontSize="{StaticResource PhoneFontSizeMedium}" Style="{StaticResource PhoneTextGroupHeaderStyle}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="UserSelfTemplate">
            <Grid VerticalAlignment="Center" Margin="45,-35,45,0">
                <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <Grid Width="81" Margin="0,16">
                        <Image Source="{Binding EmptyDialogImageSource}" Stretch="UniformToFill"/>
                    </Grid>
                    <TextBlock Text="{Binding Resources.CloudStorage, Source={StaticResource Strings}}" TextAlignment="Center" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding Resources.CloudStorageDescription, Source={StaticResource Strings}}" Margin="0,16,0,0" TextAlignment="Left" TextWrapping="Wrap"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BotTemplate">
            <Grid VerticalAlignment="Center" Margin="62,-35,62,0">
                <Border Margin="-18,-12,-18,-17" Background="{StaticResource PhoneBackgroundBrush}"/>
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch">
                    <TextBlock Text="{Binding Resources.WhatCanThisBotDo, Source={StaticResource Strings}}" TextWrapping="Wrap" FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}" FontWeight="SemiBold" TextAlignment="Center"/>

                    <emojiPanel:TelegramRichTextBox
                        MaxWidth="360"
                        Margin="0,0,0,0"
                        Text="{Binding With.BotInfo.Description}"
                        HorizontalAlignment="Stretch"
                        TextAlignment="Center"
                        FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                        Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="SupportTemplate">
            <Grid>
                <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                <StackPanel Margin="0,40,0,0">
                    <Grid Width="81">
                        <Image Source="{Binding EmptyDialogImageSource}" Stretch="UniformToFill"/>
                    </Grid>
                    <TextBlock Text="{Binding Resources.GotAQuestionAboutTelegram, Source={StaticResource Strings}}" TextWrapping="Wrap" Margin="48,40,48,0" FontSize="{StaticResource PhoneFontSizeMedium}" Style="{StaticResource PhoneTextGroupHeaderStyle}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <templateSelectors:EmptyDialogToDescriptionConverter
            x:Key="EmptyDialogToDescriptionConverter"
            UserSelfTemplate="{StaticResource UserSelfTemplate}"
            UserTemplate="{StaticResource UserTemplate}"
            BotTemplate="{StaticResource BotTemplate}"
            SupportTemplate="{StaticResource SupportTemplate}"/>
    </views:TelegramViewBase.Resources>

    <Grid>
        <ContentControl 
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
            Content="{Binding StateService}" 
            ContentTemplate="{Binding StateService.CurrentBackground, Converter={StaticResource DialogDetailsBackgroundConverter}}"/>

        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <Grid.Projection>
                <PlaneProjection CenterOfRotationX="0"/>
            </Grid.Projection>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="ContentPanel" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <telegramClient:LongListSelectorEx Grid.Row="1"
                    x:Name="MessagesList"
                    Margin="0,-7,0,0"
                    Knob="15"
                    ItemsSource="{Binding Items}"
                    IsSelectionEnabled="{Binding IsSelectionEnabled}"
                    IsFirstSliceLoaded="{Binding IsFirstSliceLoaded}"
                    IsGroupingEnabled="False"
                    micro:Message.Attach="[Event CloseToEnd] = [Action LoadNextSlice]; [Event CloseToBegin] = [Action LoadPreviousSlice]"
                    ManipulationStarted="Items_OnManipulationStarted"
                    ManipulationStateChanged="Items_OnManipulationStateChanged"
                    ItemRealized="Items_OnItemRealized"
                    ItemUnrealized="Items_OnItemUnrealized"
                    Begin="Items_OnBegin"
                    ShowScrollButton="MessagesList_OnShowScrollButton"
                    Style="{StaticResource LazyLongListSelectorStyle}">
                    <phone:LongListSelector.ItemTemplate>
                        <DataTemplate>
                            <Grid>

                                <!--<Border Height="50" Margin="12" Width="300" Background="Red"/>-->
                                <telegramControls:MessageControl 
                                    Margin="0,0,48,0"
                                    HorizontalAlignment="Stretch"
                                    Message="{Binding}"
                                    TapUserTile="ShowUserProfile_OnTap"
                                    TapViaBot="ViaBot_Tap"
                                    TapMorePanel="MorePanel_OnTap"
                                    CommandsControlButtonClick="CommandsControl_OnButtonClick"
                                    ShareButtonClick="ShareButton_OnClick"
                                    TapMedia="MessageControl_OnTapMedia"
                                    Hold="MessageControl_OnHold"
                                    ManipulationStarted="MessageControl_OnManipulationStarted"
                                    ManipulationDelta="MessageControl_OnManipulationDelta"
                                    ManipulationCompleted="MessageControl_OnManipulationCompleted">
                                    <UIElement.Projection>
                                        <PlaneProjection RotationZ="180"/>
                                    </UIElement.Projection>
                                    <UIElement.RenderTransform>
                                        <TranslateTransform/>
                                    </UIElement.RenderTransform>

                                    <telegramControls:MessageControl.ShareButtonContextMenu>
                                        <toolkit:ContextMenu Style="{StaticResource W10MContextMenuStyle}" Loaded="CopyLink_OnLoaded" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=MessagesList}" Opened="ContextMenu_OnOpened">
                                            <toolkit:MenuItem Click="CopyLink_OnClick" Header="{Binding Resources.CopyLink, Source={StaticResource Strings}}"/>
                                        </toolkit:ContextMenu>
                                    </telegramControls:MessageControl.ShareButtonContextMenu>

                                    <toolkit:ContextMenuService.ContextMenu>
                                        <toolkit:ContextMenu Style="{StaticResource W10MContextMenuStyle}" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=MessagesList}" Opened="ContextMenu_OnOpened">
                                            <toolkit:MenuItem Loaded="SelectMessages_OnLoaded" Click="SelectMessages_OnClick" Header="{Binding Resources.Select, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="ReportMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action ReportMessage($DataContext)]" Header="{Binding Resources.Report, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="ResendMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action Resend($DataContext)]" Header="{Binding Resources.Retry, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="ReplyMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="PinMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action PinMessage($DataContext)]" Header="{Binding Resources.Pin, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="EditMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action EditMessage($DataContext)]" Header="{Binding Resources.Edit, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="DeleteMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action DeleteMessage($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="ForwardMessage_OnLoaded" Click="ForwardMessage_OnClick" Header="{Binding Resources.Forward, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="AddToStickers_OnLoaded" micro:Message.Attach="[Event Click] = [Action AddToStickers($DataContext)]" Header="{Binding Resources.AddToStickers, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="AddToFavedStickers_OnLoaded" micro:Message.Attach="[Event Click] = [Action AddToFavedStickers($DataContext)]" Header="{Binding Resources.AddToFavorites, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="CopyMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="SaveMedia_OnLoaded" micro:Message.Attach="[Event Click] = [Action SaveMedia($DataContext)]" Header="{Binding Resources.Save, Source={StaticResource Strings}}"/>
                                        </toolkit:ContextMenu>
                                    </toolkit:ContextMenuService.ContextMenu>

                                </telegramControls:MessageControl>

                                <Grid Visibility="{Binding SelectionVisibility, FallbackValue=Collapsed}">
                                    <Border x:Name="SelectionBorder" 
                                        Background="Transparent" 
                                        Hold="UIElement_OnHold" 
                                        Tap="SelectionBorder_OnTap" 
                                        Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=SelfView, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                                    <CheckBox Margin="-12,-20,6,-20" IsChecked="{Binding IsSelected, Mode=TwoWay}" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <CheckBox.RenderTransform>
                                            <TranslateTransform X="2"/>
                                        </CheckBox.RenderTransform>
                                        <CheckBox.Projection>
                                            <PlaneProjection RotationZ="180"/>
                                        </CheckBox.Projection>
                                    </CheckBox>
                                </Grid>

                                <Border 
                                    Background="{StaticResource TelegramBadgeAccentBrush}" 
                                    Width="6" 
                                    HorizontalAlignment="Right" 
                                    Margin="0,6,48,6"
                                    Visibility="Collapsed"
                                    dialogs:DialogDetailsView.AnimatedVisibility="{Binding IsHighlighted}"/>
                            </Grid>
                        </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                    <phone:LongListSelector.ListHeader>
                        <Border Visibility="Collapsed"/>
                    </phone:LongListSelector.ListHeader>
                    <phone:LongListSelector.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </phone:LongListSelector.Projection>
                </telegramClient:LongListSelectorEx>

                <Image x:Name="MessagesCache" Grid.Row="1" Source="{Binding With.Bitmap}" Margin="0,-7,0,0" VerticalAlignment="Bottom">
                    <Image.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Image.Projection>
                </Image>

                <ContentControl Grid.Row="1"
                    x:Name="EmptyDialogPlaceholder"
                    Visibility="{Binding IsEmptyDialog, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Content="{Binding}" 
                    ContentTemplate="{Binding With, Converter={StaticResource EmptyDialogToDescriptionConverter}}"/>

                <Grid x:Name="MentionButton" CacheMode="BitmapCache" Grid.Row="1" Margin="0,0,6,86" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <Button Style="{StaticResource ScrollButtonStyle}" Padding="0,-6,0,0" Content="@" FontSize="36" FontWeight="Light" Foreground="#FF8D969F" Hold="MentionButton_OnHold" Tap="MentionButton_OnClick" toolkit:TiltEffect.IsTiltEnabled="True"/>
                    <controls:UnreadCounter Counter="{Binding MentionsCounter}" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False" Margin="8,8,-180,0"/>
                </Grid>

                <Grid x:Name="ScrollButton" CacheMode="BitmapCache" Grid.Row="1" Margin="0,0,6,6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <Button Style="{StaticResource ScrollButtonStyle}" Tap="ScrollButton_OnClick" toolkit:TiltEffect.IsTiltEnabled="True">
                        <Path HorizontalAlignment="Center"
                            VerticalAlignment="Center" 
                            Data="F1 M-14,0 L0,13 L14,0" 
                            Width="28" Height="13" 
                            Stretch="Fill" 
                            StrokeThickness="1" 
                            Stroke="#FF8D969F">
                        </Path>
                    </Button>
                    <controls:UnreadCounter Counter="{Binding Counter}" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False" Margin="8,8,-180,0"/>
                </Grid>

                <Grid VerticalAlignment="Top" Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,-6,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ContentControl x:Name="PinnedMessage" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    <ContentControl x:Name="UserAction" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    <ContentControl x:Name="SearchMessages" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                    <ContentControl x:Name="Player" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

                    <ContentControl x:Name="LiveLocationBadge" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                </Grid>
                <Border x:Name="CaptionBorder" Grid.Row="0" Height="104" VerticalAlignment="Top" IsHitTestVisible="False"/>
                <Grid x:Name="CaptionGrid" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <views:ConversationTileControl x:Name="DialogPhoto" Size="54" Tap="OpenPeerDetails_OnTap"
                        Margin="18,36,6,0" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                        Object="{Binding With}"
                        Source="{Binding With.Photo, Converter={StaticResource DefaultPhotoConverter}}"
                        Fill="{Binding With.Index, Converter={StaticResource PlaceholderBackgroundConverter}}"
                        Text="{Binding With, Converter={StaticResource PlaceholderDefaultTextConverter}}"/>
                    <Button Tap="OpenPeerDetails_OnTap"
                    x:Name="Caption"
                    toolkit:TiltEffect.IsTiltEnabled="True"
                    Margin="-4,18,0,12" Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom" Style="{StaticResource DialogDetailsCaptionButtonStyle}">
                        <Button.RenderTransform>
                            <TranslateTransform/>
                        </Button.RenderTransform>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" x:Name="Title">
                                <StackPanel.RenderTransform>
                                    <CompositeTransform/>
                                </StackPanel.RenderTransform>
                                <TextBlock HorizontalAlignment="Left" Text="{Binding With, Converter={StaticResource DialogCaptionConverter}, ConverterParameter=uppercase}" Foreground="White" Style="{StaticResource ApplicationTitleStyle}"/>
                            </StackPanel>
                            <StackPanel Margin="0,-4,0,0" Orientation="Horizontal">
                                <telegramControls:TypingControl Margin="6,0,0,0" Height="26" Typing="{Binding Typing}" Visibility="{Binding Typing, Converter={StaticResource ExistsToVisibilityConverter}}">
                                    <telegramControls:TypingControl.RenderTransform>
                                        <TranslateTransform Y="1"/>
                                    </telegramControls:TypingControl.RenderTransform>
                                </telegramControls:TypingControl>
                                <TextBlock Text="{Binding Subtitle}" Margin="6,0,0,0" Foreground="White" Opacity="0.5" Style="{StaticResource PhoneTextSubtleStyle}"/>
                            </StackPanel>
                            <TextBlock x:Name="Debug" Margin="6,-4,0,0" Foreground="GreenYellow" Visibility="Collapsed" Style="{StaticResource PhoneTextSubtleStyle}"/>
                        </StackPanel>
                    </Button>
                    <Image x:Name="ContextMenuIcon" Source="/Images/W10M/ic_more_2x.png" Grid.Row="0" Grid.Column="2" Width="32" Height="32" Margin="18,51,18,21" VerticalAlignment="Top" Hold="ContextMenu_OnHold" Tap="ContextMenu_OnTap">
                        <toolkit:ContextMenuService.ContextMenu>
                            <toolkit:ContextMenu x:Name="ContextMenu" HorizontalAlignment="Right" Margin="18,10" Style="{StaticResource W10MContextMenuStyle}" Opened="ContextMenu_OnOpened"/>
                        </toolkit:ContextMenuService.ContextMenu>
                    </Image>
                </Grid>

                <Grid Grid.Row="1" Visibility="{Binding IsAppBarCommandVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Collapsed}">
                    <!-- Stickers -->
                    <ContentControl x:Name="StickerHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="124"
                                Tap="StickerHints_OnTap"
                                ManipulationStarted="StickerHints_OnManipulationStarted"/>

                    <!-- Inline bots -->
                    <ContentControl x:Name="InlineBotResults" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="InlineBotResults_OnTap"
                                ManipulationStarted="InlineBotResults_OnManipulationStarted"/>

                    <!-- Usernames -->
                    <ContentControl x:Name="UsernameHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="UsernameHint_OnTap"
                                ManipulationStarted="UsernameHints_OnManipulationStarted"/>

                    <!-- Commands -->
                    <ContentControl x:Name="CommandHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="CommandHint_OnTap"
                                ManipulationStarted="CommandHints_OnManipulationStarted"/>

                    <!-- Hashtags -->
                    <ContentControl x:Name="HashtagHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="HashtagHint_OnTap"
                                Hold="HashtagHintsPanel_OnHold"
                                ManipulationStarted="HashtagHints_OnManipulationStarted"/>

                    <!-- Emoji -->
                    <ContentControl x:Name="EmojiHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="EmojiHint_OnTap"
                                ManipulationStarted="EmojiHints_OnManipulationStarted"/>

                    <!-- Input message hint -->
                    <ContentControl x:Name="InputMessageHintPlaceholder" 
                                Margin="24,0,24,12" 
                                HorizontalContentAlignment="Stretch" 
                                VerticalAlignment="Bottom" 
                                IsHitTestVisible="False"/>
                </Grid>

                <telegramControls:InputBox Grid.Row="3"
                    x:Name="InputMessage"
                    Text="{Binding Text, Mode=TwoWay}"
                    InlineWatermark="{Binding BotInlinePlaceholder}"
                    TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"                        
                    MuteButtonImageSource="{Binding MuteButtonImageSource}"
                            
                    Command="{Binding AppBarCommandString}"
                    IsAppBarCommandVisible="{Binding IsAppBarCommandVisible, FallbackValue=false}"
                    AppBarCommandClick="InputMessage_OnAppBarCommandClick"
                            
                    Reply="{Binding Reply}"
                    ReplyTemplate="{Binding ReplyInfo, Converter={StaticResource ReplyTemplateSelector}}"
                    OpenReplyButtonClick="InputMessage_OnOpenReplyButtonClick"
                    DeleteReplyButtonClick="InputMessage_OnDeleteReplyButtonClick"
                            
                    ReplyMarkup="{Binding ReplyMarkup}"
                            
                    EmojiButtonClick="InputMessage_OnEmojiClick"
                    KeyboardButtonClick="InputMessage_OnKeyboardButtonClick"
                    MuteButtonClick="InputMessage_OnMuteButtonClick"
                    AttachButtonClick="InputMessage_OnAttachClick"
                    SendButtonClick="InputMessage_OnSendClick"
                            
                    CancelSelectionButtonClick="InputMessage_OnCancelSelectionButtonClick"
                    ForwardButtonClick="InputMessage_OnForwardButtonClick"
                    DeleteButtonClick="InputMessage_OnDeleteButtonClick"
                            
                    InputGotFocus="InputMessage_OnGotFocus"
                    InputLostFocus="InputMessage_OnLostFocus"
                    InputKeyDown="InputMessage_OnKeyDown"
                    InputTextChanged="InputMessage_OnTextChanged"
                                           
                    ShowEmojiHints="InputMessage_OnShowEmojiHints"
                    HideEmojiHints="InputMessage_OnHideEmojiHints">
                    <telegramControls:InputBox.RenderTransform>
                        <TranslateTransform Y="0"/>
                    </telegramControls:InputBox.RenderTransform>
                </telegramControls:InputBox>

                <Grid Grid.Row="4" Visibility="{Binding IsAppBarCommandVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Collapsed}">
                    <dialogs:CommandsControl x:Name="CommandsControl" ReplyMarkup="{Binding ReplyMarkup}" ButtonClick="CommandsControl_OnButtonClick" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                </Grid>
            </Grid>

            <ContentControl Grid.RowSpan="2" x:Name="ChooseAttachment" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
        </Grid>

        <ContentControl x:Name="ImageEditor"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="MultiImageEditor"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="VideoEditor"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="ImageViewer" Opacity="1.0"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="AnimatedImageViewer"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                        Visibility="{Binding AnimatedImageViewer.IsOpen, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

        <ContentControl x:Name="MultiPhotoPicker"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                        Visibility="{Binding MultiPhotoPicker.IsOpen, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

        <ContentControl x:Name="LocationPicker"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="ContactPicker"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
    </Grid>
</views:TelegramViewBase>