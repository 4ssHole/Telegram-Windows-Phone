<views:TelegramViewBase
    x:Class="TelegramClient.Views.Dialogs.SecretDialogDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:controls="clr-namespace:Telegram.Controls;assembly=Telegram.Controls"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    xmlns:client="clr-namespace:TelegramClient"
    xmlns:selector="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    xmlns:controls1="clr-namespace:TelegramClient.Views.Controls"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:controls2="clr-namespace:TelegramClient.Controls"
    xmlns:dialogs="clr-namespace:TelegramClient.Views.Dialogs"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    x:Name="SelfView"
    CacheMode="BitmapCache"
    IsScreenCaptureEnabled="False"
    BackKeyPress="SecretDialogDetailsView_OnBackKeyPress"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.ForegroundColor="#FFE3F4FF"
    shell:SystemTray.IsVisible="True">

    <controls2:TelegramTransitionService.NavigationOutTransition>
        <controls2:TelegramNavigationOutTransition>
            <controls2:TelegramNavigationOutTransition.Forward>
                <controls2:TelegramTurnstileTransition Mode="ForwardOut"/>
            </controls2:TelegramNavigationOutTransition.Forward>
        </controls2:TelegramNavigationOutTransition>
    </controls2:TelegramTransitionService.NavigationOutTransition>

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" Text="{Binding MTProtoService.Message}"/>
    </shell:SystemTray.ProgressIndicator>

    <views:TelegramViewBase.Resources>
        <Storyboard x:Name="CloseCacheStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MessagesList" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                    <!--<EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="5" EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>-->
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MessagesCache" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                    <!--<EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase Exponent="5" EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>-->
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MessagesCache" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="Collapsed"/>
            </ObjectAnimationUsingKeyFrames>
            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Items" Storyboard.TargetProperty="IsHitTestVisible">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="True"/>
            </ObjectAnimationUsingKeyFrames>-->
        </Storyboard>
    </views:TelegramViewBase.Resources>
    <Grid>
        <ContentControl 
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
            Content="{Binding StateService}" 
            ContentTemplate="{Binding StateService.CurrentBackground, Converter={StaticResource DialogDetailsBackgroundConverter}}"/>

        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <Grid.Projection>
                <PlaneProjection CenterOfRotationX="0"/>
            </Grid.Projection>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="ContentPanel" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid x:Name="Description" VerticalAlignment="Center" Margin="90,-35,90,0"
                    Visibility="{Binding DescriptionVisibility}">
                    <Border Margin="-12" Background="{StaticResource PhoneBackgroundBrush}" Opacity="0.3"/>
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Status}" TextAlignment="Center" TextWrapping="Wrap"/>
                        <TextBlock Text="{Binding Resources.SecretChatsDescription, Source={StaticResource Strings}}" Margin="0,16,0,0" TextAlignment="Left" TextWrapping="Wrap"/>
                    </StackPanel>
                </Grid>

                <client:LongListSelectorEx
                    x:Name="MessagesList"
                    Margin="0,-7,0,0"
                    Knob="15"
                    ItemsSource="{Binding Items}"
                    IsSelectionEnabled="{Binding IsSelectionEnabled}"
                    IsGroupingEnabled="False"
                    micro:Message.Attach="[Event CloseToEnd] = [Action LoadNextSlice]"
                    ManipulationStarted="Items_OnManipulationStarted"
                    ManipulationStateChanged="Items_OnManipulationStateChanged"
                    Begin="Items_OnBegin"
                    Style="{StaticResource LazyLongListSelectorStyle}">
                    <phone:LongListSelector.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <controls1:DecryptedMessageControl 
                                    Margin="0,0,48,0"
                                    HorizontalAlignment="Stretch" 
                                    Message="{Binding}"
                                    TapViaBot="ViaBot_Tap"
                                    TapMorePanel="MorePanel_OnTap"
                                    TapMedia="MessageControl_OnTapMedia"
                                    StartTimer="SecretPhotoPlaceholder_OnStartTimer" 
                                    Elapsed="SecretPhotoPlaceholder_OnElapsed"
                                    Hold="MessageControl_OnHold"
                                    ManipulationStarted="MessageControl_OnManipulationStarted"
                                    ManipulationDelta="MessageControl_OnManipulationDelta"
                                    ManipulationCompleted="MessageControl_OnManipulationCompleted">
                                    <UIElement.Projection>
                                        <PlaneProjection RotationZ="180"/>
                                    </UIElement.Projection>

                                    <toolkit:ContextMenuService.ContextMenu>
                                        <toolkit:ContextMenu Style="{StaticResource W10MContextMenuStyle}" Loaded="ContextMenu_OnLoaded" Opened="ContextMenu_OnOpened" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=MessagesList}">
                                            <toolkit:MenuItem Click="SelectMessages_OnClick" Header="{Binding Resources.Select, Source={StaticResource Strings}}" />
                                            <toolkit:MenuItem Loaded="ResendMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action Resend($DataContext)]" Header="{Binding Resources.Retry, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="ReplyMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action ReplyMessage($DataContext)]" Header="{Binding Resources.Reply, Source={StaticResource Strings}}" />
                                            <toolkit:MenuItem Loaded="DeleteMessage_OnLoaded" Click="DeleteMessage_OnClick"  Header="{Binding Resources.Delete, Source={StaticResource Strings}}" />
                                            <toolkit:MenuItem Loaded="CopyMessage_OnLoaded" micro:Message.Attach="[Event Click] = [Action CopyMessage($DataContext)]" Header="{Binding Resources.Copy, Source={StaticResource Strings}}"/>
                                            <toolkit:MenuItem Loaded="AddToStickers_OnLoaded" micro:Message.Attach="[Event Click] = [Action AddToStickers($DataContext)]" Header="{Binding Resources.AddToStickers, Source={StaticResource Strings}}"/>
                                        </toolkit:ContextMenu>
                                    </toolkit:ContextMenuService.ContextMenu>
                                </controls1:DecryptedMessageControl>

                                <Grid Visibility="{Binding SelectionVisibility, FallbackValue=Collapsed}">
                                    <Border x:Name="SelectionBorder" 
                                        Background="Transparent" 
                                        Hold="UIElement_OnHold" 
                                        Tap="SelectionBorder_OnTap" 
                                        Visibility="{Binding DataContext.IsSelectionEnabled, ElementName=SelfView, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                                    <CheckBox Margin="-12,-20,6,-20" IsChecked="{Binding IsSelected, Mode=TwoWay}" IsHitTestVisible="False" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <CheckBox.RenderTransform>
                                            <TranslateTransform X="2"/>
                                        </CheckBox.RenderTransform>
                                        <CheckBox.Projection>
                                            <PlaneProjection RotationZ="180"/>
                                        </CheckBox.Projection>
                                    </CheckBox>
                                </Grid>

                                <Border 
                                    Background="{StaticResource TelegramBadgeAccentBrush}" 
                                    Width="6" 
                                    HorizontalAlignment="Right" 
                                    Margin="0,6,48,6"
                                    Visibility="Collapsed"
                                    dialogs:DialogDetailsView.AnimatedVisibility="{Binding IsHighlighted}"/>
                            </Grid>
                        </DataTemplate>
                    </phone:LongListSelector.ItemTemplate>
                    <phone:LongListSelector.ListHeader>
                        <Border Background="Transparent" Height="2"/>
                    </phone:LongListSelector.ListHeader>
                    <phone:LongListSelector.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </phone:LongListSelector.Projection>
                </client:LongListSelectorEx>
                <Image x:Name="MessagesCache" Source="{Binding Chat.Bitmap}" Margin="0,-7,0,0" VerticalAlignment="Bottom">
                    <Image.Projection>
                        <PlaneProjection RotationZ="180"/>
                    </Image.Projection>
                </Image>

                <Grid x:Name="ScrollButton" Margin="0,0,6,6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Grid.RenderTransform>
                        <CompositeTransform/>
                    </Grid.RenderTransform>
                    <Button Style="{StaticResource ScrollButtonStyle}" Click="ScrollButton_OnClick" toolkit:TiltEffect.IsTiltEnabled="True">
                        <Path HorizontalAlignment="Center"
                            VerticalAlignment="Center" 
                            Data="F1 M-14,0 L0,13 L14,0" 
                            Width="28" Height="13" 
                            Stretch="Fill" 
                            StrokeThickness="1" 
                            Stroke="#FF8D969F">
                        </Path>
                    </Button>
                </Grid>

                <!--<ContentControl x:Name="Player" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0,-6,0,0"/>-->

                <Grid Visibility="{Binding IsAppBarCommandVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Collapsed}">
                    <!-- Stickers -->
                    <ContentControl x:Name="StickerHints" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="124"
                                Tap="StickerHints_OnTap"
                                ManipulationStarted="StickerHints_OnManipulationStarted"/>

                    <!-- Inline bots -->
                    <ContentControl x:Name="InlineBotResults" 
                                VerticalAlignment="Bottom" HorizontalAlignment="Stretch" 
                                HorizontalContentAlignment="Stretch" 
                                Margin="0,-38,0,0" MaxHeight="241"
                                Tap="InlineBotResults_OnTap"
                                ManipulationStarted="InlineBotResults_OnManipulationStarted"/>
                </Grid>

                <controls1:InputBox Grid.Row="2"
                    x:Name="InputMessage"
                    Text="{Binding Text, Mode=TwoWay}"
                    InlineWatermark="{Binding BotInlinePlaceholder}"
                    TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"                        
                    MuteButtonImageSource=""
                    ForwardButtonVisibility="Collapsed"
                            
                    Command="{Binding AppBarCommandString}"
                    IsAppBarCommandVisible="{Binding IsAppBarCommandVisible, FallbackValue=false}"
                    AppBarCommandClick="InputMessage_OnAppBarCommandClick"
                            
                    Reply="{Binding Reply}"
                    ReplyTemplate="{Binding ReplyInfo, Converter={StaticResource DecryptedReplyTemplateSelector}}"
                    OpenReplyButtonClick="InputMessage_OnOpenReplyButtonClick"
                    DeleteReplyButtonClick="InputMessage_OnDeleteReplyButtonClick"
                            
                    EmojiButtonClick="InputMessage_OnEmojiClick"
                    KeyboardButtonClick="InputMessage_OnKeyboardButtonClick"
                    MuteButtonClick="InputMessage_OnMuteButtonClick"
                    AttachButtonClick="InputMessage_OnAttachClick"
                    SendButtonClick="InputMessage_OnSendClick"
                            
                    CancelSelectionButtonClick="InputMessage_OnCancelSelectionButtonClick"
                    ForwardButtonClick="InputMessage_OnForwardButtonClick"
                    DeleteButtonClick="InputMessage_OnDeleteButtonClick"
                            
                    InputGotFocus="InputMessage_OnGotFocus"
                    InputLostFocus="InputMessage_OnLostFocus"
                    InputKeyDown="InputMessage_OnKeyDown"
                    InputTextChanged="InputMessage_OnTextChanged">
                    <controls1:InputBox.RenderTransform>
                        <TranslateTransform Y="0"/>
                    </controls1:InputBox.RenderTransform>
                </controls1:InputBox>
            </Grid>

            <ContentControl x:Name="SecretChatDebug" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="0,-6,0,0"
                Visibility="{Binding Converter={StaticResource DebugVisibilityConverter}}"/>

            <Border x:Name="CaptionBorder" Height="104" VerticalAlignment="Top" IsHitTestVisible="False"/>
            <Grid x:Name="CaptionGrid" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <views:ConversationTileControl x:Name="DialogPhoto" Size="54" Tap="OpenPeerDetails_OnTap"
                    Margin="18,36,6,0" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top"
                    Source="{Binding With.Photo, Converter={StaticResource DefaultPhotoConverter}}"
                    Fill="{Binding With.Index, Converter={StaticResource PlaceholderBackgroundConverter}}"
                    Text="{Binding With, Converter={StaticResource PlaceholderDefaultTextConverter}}"/>
                <Button Tap="OpenPeerDetails_OnTap"
                     x:Name="Caption"
                    toolkit:TiltEffect.IsTiltEnabled="True"
                    Margin="-4,18,0,12" Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom" Style="{StaticResource DialogDetailsCaptionButtonStyle}">
                    <Button.RenderTransform>
                        <TranslateTransform/>
                    </Button.RenderTransform>
                    <StackPanel>
                        <Grid x:Name="Title">
                            <Grid.RenderTransform>
                                <CompositeTransform/>
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0"
                                    Background="White"
                                    Height="16" Width="16"
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="Bottom"
                                    Margin="6,0,0,6">
                                <Border.OpacityMask>
                                    <ImageBrush ImageSource="/Images/W10M/ic_secretchat_2x.png" Stretch="Uniform"/>
                                </Border.OpacityMask>
                            </Border>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding With.FullName, Converter={StaticResource Uppercase}}" Foreground="White" Style="{StaticResource ApplicationTitleStyle}"/>
                        </Grid>
                        <StackPanel Margin="0,-4,0,0" Orientation="Horizontal">
                            <controls1:TypingControl Margin="6,0,0,0" Height="26" Typing="{Binding Typing}" Visibility="{Binding Typing, Converter={StaticResource ExistsToVisibilityConverter}}">
                                <controls1:TypingControl.RenderTransform>
                                    <TranslateTransform Y="1"/>
                                </controls1:TypingControl.RenderTransform>
                            </controls1:TypingControl>
                            <TextBlock Text="{Binding Subtitle}" Margin="6,0,0,0" Foreground="White" Opacity="0.5" Style="{StaticResource PhoneTextSubtleStyle}"/>
                        </StackPanel>
                        <TextBlock x:Name="Debug" Margin="6,-4,0,0" Foreground="GreenYellow" Visibility="Collapsed" Style="{StaticResource PhoneTextSubtleStyle}"/>
                    </StackPanel>
                </Button>
                <Image x:Name="ContextMenuIcon" Source="/Images/W10M/ic_more_2x.png" Grid.Row="0" Grid.Column="2" Width="32" Height="32" Margin="18,51,18,21" VerticalAlignment="Top" Hold="ContextMenu_OnHold" Tap="ContextMenu_OnTap">
                    <toolkit:ContextMenuService.ContextMenu>
                        <toolkit:ContextMenu x:Name="ContextMenu" HorizontalAlignment="Right" Margin="18,10" Style="{StaticResource W10MContextMenuStyle}" Opened="ContextMenu_OnOpened"/>
                    </toolkit:ContextMenuService.ContextMenu>
                </Image>
            </Grid>

            <ContentControl Grid.RowSpan="2" x:Name="ChooseAttachment" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
        </Grid>

        <ContentControl x:Name="MultiImageEditor"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="ImageViewer"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>

        <ContentControl x:Name="LocationPicker"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
    </Grid>

</views:TelegramViewBase>