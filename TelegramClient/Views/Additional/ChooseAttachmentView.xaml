<UserControl
    x:Class="TelegramClient.Views.Additional.ChooseAttachmentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:views="clr-namespace:TelegramClient.Views"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    x:Name="Self"
    toolkit:TiltEffect.IsTiltEnabled="True"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="False" 
    d:DesignHeight="800" d:DesignWidth="480">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="Scroll" TargetType="ScrollViewer">
                <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollViewer" >
                            <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ScrollStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="00:00:00.5"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Scrolling" />
                                        <VisualState x:Name="NotScrolling"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="VerticalCompression">
                                        <VisualState x:Name="NoVerticalCompression"/>
                                        <VisualState x:Name="CompressionTop"/>
                                        <VisualState x:Name="CompressionBottom"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="HorizontalCompression">
                                        <VisualState x:Name="NoHorizontalCompression"/>
                                        <VisualState x:Name="CompressionLeft"/>
                                        <VisualState x:Name="CompressionRight"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                                <ScrollBar x:Name="VerticalScrollBar" HorizontalAlignment="Right" Height="Auto" IsHitTestVisible="False" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" VerticalAlignment="Stretch" Width="5"/>
                                <ScrollBar x:Name="HorizontalScrollBar" HorizontalAlignment="Stretch" Height="5" IsHitTestVisible="False" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" VerticalAlignment="Bottom" Width="Auto"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Storyboard x:Name="OpenStoryboard" Completed="OpenStoryboard_OnCompleted">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ContentPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-90"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="3"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <ObjectAnimationUsingKeyFrames.KeyFrames>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0">
                            <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames.KeyFrames>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="CloseStoryboard" Completed="CloseStoryboard_OnCompleted">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ContentPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="90">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseIn" Exponent="3"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <ObjectAnimationUsingKeyFrames.KeyFrames>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.25">
                            <DiscreteObjectKeyFrame.Value>
                                <Visibility>Collapsed</Visibility>
                            </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames.KeyFrames>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <DataTemplate x:Key="HorizontalDialogTemplate">
                <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenInlineBot($DataContext)]">
                    <Grid x:Name="MainItemGrid" Margin="0" Width="104" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <toolkit:ContextMenuService.ContextMenu>
                            <toolkit:ContextMenu Style="{StaticResource W10MContextMenuStyle}" micro:Action.TargetWithoutContext="{Binding DataContext, ElementName=Self}">
                                <toolkit:MenuItem micro:Message.Attach="[Event Click] = [ResetTopPeerRating($DataContext)]" Header="{Binding Resources.Delete, Source={StaticResource Strings}}"/>
                            </toolkit:ContextMenu>
                        </toolkit:ContextMenuService.ContextMenu>

                        <views:ConversationTileControl
                            Size="62" Margin="0,12,0,12" Grid.Row="0"
                            Fill="{Binding Index, Converter={StaticResource PlaceholderBackgroundConverter}}"
                            Text="{Binding Converter={StaticResource PlaceholderDefaultTextConverter}}"
                            Source="{Binding Photo, Converter={StaticResource DefaultPhotoConverter}}"/>
                        <TextBlock Grid.Row="1" Text="{Binding FullName}" Height="54" Margin="3,0" LineStackingStrategy="BlockLineHeight" LineHeight="22" TextAlignment="Center" TextWrapping="Wrap" TextTrimming="WordEllipsis"/>
                    </Grid>
                </ListBoxItem>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid x:Name="LayoutRoot" Background="#99000000">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,0,0,-140"  Background="Transparent" Tap="LayoutRoot_OnTap"/>
        <Grid Grid.Row="1" x:Name="ContentPanel"
            ManipulationStarted="ContentPanel_OnManipulationStarted"
            ManipulationDelta="ContentPanel_OnManipulationDelta"
            ManipulationCompleted="ContentPanel_OnManipulationCompleted"
            CacheMode="BitmapCache" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.Projection>
                <PlaneProjection/>
            </Grid.Projection>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="ContentPanelTransform"/>
            </Grid.RenderTransform>
            <!--<Border HorizontalAlignment="Center" Width="36" Height="36" BorderThickness="1" BorderBrush="Red"/>-->
            <ContentControl x:Name="InputMessageHintPlaceholder" 
                Margin="24,12" 
                HorizontalContentAlignment="Stretch" 
                VerticalAlignment="Bottom" 
                IsHitTestVisible="False"/>
            <Path x:Name="Hint" Grid.Row="1" Data="F 1 M 0,0 18,-7 36,0" VerticalAlignment="Top" Canvas.ZIndex="1" Opacity="0.4" HorizontalAlignment="Center" Margin="6" Fill="Transparent" StrokeThickness="4" Stroke="{StaticResource PhoneForegroundBrush}" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round">
                <Path.RenderTransform>
                    <CompositeTransform TranslateX="1" TranslateY="10"/>
                </Path.RenderTransform>
            </Path>
            <Grid Grid.Row="1" Background="{StaticResource PhoneChromeBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Margin="12,25,12,25">
                    <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenCamera]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.Camera, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                    <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenPhoto]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.PhotoAccusative, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                    <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenVideo]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.VideoAccusative, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                    <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenLocation]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.LocationAccusative, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                    <ListBoxItem CacheMode="BitmapCache" micro:Message.Attach="[Event Tap] = [Action OpenDocument]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.DocumentAccusative, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                    <ListBoxItem CacheMode="BitmapCache" x:Name="OpenContactItem" micro:Message.Attach="[Event Tap] = [Action OpenContact]">
                        <TextBlock Margin="12,0,12,12" Text="{Binding Resources.ContactAccusative, Source={StaticResource Strings}, Converter={StaticResource Lowercase}}" Style="{StaticResource PhoneTextLargeStyle}" />
                    </ListBoxItem>
                </StackPanel>
                <ItemsControl 
                    x:Name="InlineBotsControl"
                    Grid.Row="1"
                    ItemsSource="{Binding InlineBots}" 
                    ItemTemplate="{StaticResource HorizontalDialogTemplate}"
                    Margin="0,0,0,0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer x:Name="InlineBotsScroll"  Style="{StaticResource Scroll}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>
            </Grid>
        </Grid>
    </Grid>

</UserControl>