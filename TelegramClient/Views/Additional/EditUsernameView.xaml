<views:TelegramViewBase
    x:Class="TelegramClient.Views.Additional.EditUsernameView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
    xmlns:additional="clr-namespace:TelegramClient.Views.Additional"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:controls1="clr-namespace:TelegramClient.Controls"
    xmlns:controls2="clr-namespace:TelegramClient.Views.Controls"
    xmlns:behaviors="clr-namespace:TelegramClient.Behaviors"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="Self"
    mc:Ignorable="d"
    toolkit:TiltEffect.IsTiltEnabled="True"
    shell:SystemTray.Opacity="0.0"
    shell:SystemTray.IsVisible="True">

    <controls1:TelegramTransitionService.NavigationInTransition>
        <controls1:TelegramNavigationInTransition>
            <controls1:TelegramNavigationInTransition.Backward>
                <controls1:TelegramTurnstileTransition Mode="BackwardIn" />
            </controls1:TelegramNavigationInTransition.Backward>
            <controls1:TelegramNavigationInTransition.Forward>
                <controls1:TelegramTurnstileTransition Mode="ForwardIn"/>
            </controls1:TelegramNavigationInTransition.Forward>
        </controls1:TelegramNavigationInTransition>
    </controls1:TelegramTransitionService.NavigationInTransition>
    <controls1:TelegramTransitionService.NavigationOutTransition>
        <controls1:TelegramNavigationOutTransition>
            <controls1:TelegramNavigationOutTransition.Backward>
                <controls1:TelegramTurnstileTransition Mode="BackwardOut"/>
            </controls1:TelegramNavigationOutTransition.Backward>
            <controls1:TelegramNavigationOutTransition.Forward>
                <controls1:TelegramTurnstileTransition Mode="ForwardOut"/>
            </controls1:TelegramNavigationOutTransition.Forward>
        </controls1:TelegramNavigationOutTransition>
    </controls1:TelegramTransitionService.NavigationOutTransition>

    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator x:Name="ProgressIndicator" IsIndeterminate="{Binding IsWorking}" IsVisible="True" Text="{Binding MTProtoService.Message}"/>
    </shell:SystemTray.ProgressIndicator>

    <Grid x:Name="LayoutRoot" Background="Transparent">
        <i:Interaction.Behaviors>
            <ec:DataStateBehavior Binding="{Binding IsWorking}" Value="True" TrueState="Working" FalseState="Normal"/>
            <ec:DataStateBehavior Binding="{Binding HasError}" Value="True" TrueState="NotAvailable" FalseState="Available"/>
            <ec:DataStateBehavior Binding="{Binding IsUsernameAvailable}" Value="True" TrueState="UsernameAvailable" FalseState="UsernameNotAvailable"/>          
        </i:Interaction.Behaviors>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MainGroup">
                <VisualState x:Name="Normal">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(additional:EditCurrentUserView.AppBarState)" Storyboard.TargetName="Self">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Normal"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Working">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="UsernameLabel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(additional:EditUsernameView.AppBarState)" Storyboard.TargetName="Self">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Working"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="UsernameAvailableGroup">
                <VisualState x:Name="UsernameNotAvailable">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="UsernameHint">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="-100">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UsernameHint">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="UsernameAvailable">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="UsernameHint">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UsernameHint">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AvailabilityGroup">
                <VisualState x:Name="Available">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="-100">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NotAvailable">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="100"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Error">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border x:Name="Caption" Height="104" VerticalAlignment="Top" IsHitTestVisible="False"/>

        <StackPanel Grid.Row="0" Margin="12,49,0,28">
            <TextBlock Text="{Binding Resources.Edit, Converter={StaticResource Uppercase}, Source={StaticResource Strings}}" Style="{StaticResource ApplicationTitleStyle}"/>
        </StackPanel>

        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="6,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <TextBlock Text="{Binding Resources.Username, Source={StaticResource Strings}}" Style="{StaticResource PhoneTextSubtleStyle}" Margin="12,18,12,-5"/>
                <controls2:LabeledTextBox 
                    x:Name="UsernameLabel"
                    InputScope="Text"
                    MaxLength="32"
                    Label="" 
                    Text="{Binding Username, Mode=TwoWay}"
                    KeyDown="Username_OnKeyDown">
                    <i:Interaction.Behaviors>
                        <behaviors:UpdateLabeledTextBindingBehavior/>
                    </i:Interaction.Behaviors>
                </controls2:LabeledTextBox>
            </StackPanel>

            <TextBlock Grid.Row="1" Margin="12,-6,12,0" x:Name="Error" Text="{Binding Error}" TextWrapping="Wrap" Foreground="{StaticResource TelegramTextRedBrush}" Style="{StaticResource PhoneTextSubtleStyle}">
                <TextBlock.RenderTransform>
                    <TranslateTransform/>
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Grid.Row="1" Margin="12,-6,12,0" x:Name="UsernameHint" Text="{Binding UsernameAvailableString}" TextWrapping="Wrap" Foreground="ForestGreen"  Style="{StaticResource PhoneTextSubtleStyle}">
                <TextBlock.RenderTransform>
                    <TranslateTransform/>
                </TextBlock.RenderTransform>
            </TextBlock>
            
            <TextBlock Grid.Row="2" Margin="12,18,12,0" Text="{Binding Resources.UsernameDescription, Source={StaticResource Strings}}" TextWrapping="Wrap" Style="{StaticResource PhoneTextSubtleStyle}"/>
        </Grid>
    </Grid>

</views:TelegramViewBase>