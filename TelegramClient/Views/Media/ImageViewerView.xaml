<views:TelegramViewBase
    x:Class="TelegramClient.Views.Media.ImageViewerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:converters="clr-namespace:TelegramClient.Converters"
    xmlns:templateSelectors="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    xmlns:controls="clr-namespace:TelegramClient.Views.Controls"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    x:Name="Self"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="False" 
    d:DesignHeight="800" 
    d:DesignWidth="480">
    <views:TelegramViewBase.Resources>
        <ResourceDictionary>
            <Storyboard x:Name="OpenApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame x:Name="OpenApplicationPanelAnimationStartKeyFrame" KeyTime="0" Value="60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="CloseApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame x:Name="CloseApplicationPanelAnimationStopKeyFrame" KeyTime="0:0:0.20" Value="-60">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.20" Value="Collapsed"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            
            <Storyboard x:Name="OpenTopApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="TopApplicationPanel">
                    <EasingDoubleKeyFrame x:Name="OpenTopApplicationPanelAnimationStartKeyFrame" KeyTime="0" Value="-60"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TopApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TopApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Name="CloseTopApplicationPanelAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="TopApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame x:Name="CloseTopApplicationPanelAnimationStopKeyFrame" KeyTime="0:0:0.20" Value="60">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TopApplicationPanel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TopApplicationPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.20" Value="Collapsed"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <converters:ImageViewerPhotoConverter x:Key="ImageViewerPhotoConverter"/>

            <DataTemplate x:Key="PhotoTemplate">
                <!--<controls:MediaPhotoControl
                    Media="{Binding}"
                    Source="{Binding Media.Photo.Self, Converter={StaticResource ForcePhotoConverter}, ConverterParameter='800_Background'}"
                    PreviewSource="{Binding Media.ThumbSelf, Converter={StaticResource ImageViewerPhotoConverter}, ConverterParameter=Background}">         
                </controls:MediaPhotoControl>-->
                <Grid>
                    <Image Source="{Binding Media.ThumbSelf, Converter={StaticResource ImageViewerPhotoConverter}, ConverterParameter=Background}"/>
                    <Image Source="{Binding Media.Photo.Self, Converter={StaticResource ForcePhotoConverter}, ConverterParameter='800_Background'}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="VideoTemplate">
                <Border MaxHeight="500" Tap="VideoElement_OnTap">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" MinHeight="250" Background="Black">

                        <controls:MediaVideoControl
                            Width="480"
                            Source="{Binding Media.ThumbSelf, Converter={StaticResource PhotoToThumbConverter}}"
                            DownloadIconVisibility="{Binding Media.Self, Converter={StaticResource DownloadMediaToVisibilityConverter}}"
                            DownloadingProgress="{Binding Media.DownloadingProgress}"
                            UploadingProgress="{Binding Media.UploadingProgress}"
                            micro:Message.Attach="[Event CancelDownloading] = [Action CancelVideoDownloading]"/>
                        
                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image VerticalAlignment="Center"
					                Width="48" Height="48" Margin="-4,3,-4,0"
					                Source="/Images/Audio/appbar.transport.play.rest.png"/>
                            <TextBlock Grid.Column="1"
					                VerticalAlignment="Center" Margin="0"
					                Text="{Binding Media.Video.DurationString}"
					                Foreground="White"
					                Style="{StaticResource PhoneTextLargeStyle}"/>
                        </Grid>
                    </Grid>
                </Border>
            </DataTemplate>

            <templateSelectors:ImageViewerTemplateSelector
                x:Key="Selector"
                PhotoTemplate="{StaticResource PhotoTemplate}"
                VideoTemplate="{StaticResource VideoTemplate}"/>
        </ResourceDictionary>
    </views:TelegramViewBase.Resources>

    <Grid 
        x:Name="MainGrid"
        Background="Transparent"
        ManipulationStarted="ImagesGrid_OnManipulationStarted"
        ManipulationDelta="ImagesGrid_OnManipulationDelta"
        ManipulationCompleted="ImagesGrid_OnManipulationCompleted"
        Tap="ImagesGrid_OnTap">
        <Grid x:Name="BackgroundBorder" IsHitTestVisible="False" HorizontalAlignment="Center" Background="Black" Margin="0,0,0,-1" CacheMode="BitmapCache" Width="480"/>
        <Grid x:Name="ImagesGrid" IsHitTestVisible="True" Background="Transparent" Margin="-498,0" Width="1476">
            <Grid.RenderTransform>
                <CompositeTransform/>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="Item3" Grid.Column="1" VerticalAlignment="Center" Width="480" Margin="6,0">
                <ContentControl 
                    x:Name="Control3"
                    CacheMode="BitmapCache"
                    Content="{Binding NextItem}" 
                    ContentTemplate="{Binding NextItem, Converter={StaticResource Selector}}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
            </Grid>

            <Grid x:Name="Item2" Grid.Column="1" VerticalAlignment="Center" Width="480" Margin="6,0">
                <ContentControl 
                    x:Name="Control2" 
                    CacheMode="BitmapCache"
                    Content="{Binding CurrentItem}" 
                    ContentTemplate="{Binding CurrentItem, Converter={StaticResource Selector}}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <ContentControl.RenderTransform>
                        <CompositeTransform/>
                    </ContentControl.RenderTransform>
                </ContentControl>
            </Grid>
            
            <Grid x:Name="Item1" Grid.Column="2" VerticalAlignment="Center" Width="480" Margin="6,0">
                <ContentControl 
                    x:Name="Control1"
                    CacheMode="BitmapCache"
                    Content="{Binding PreviousItem}" 
                    ContentTemplate="{Binding PreviousItem, Converter={StaticResource Selector}}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
            </Grid>
        </Grid>
        
        <Grid VerticalAlignment="Top" x:Name="TopApplicationPanel" CacheMode="BitmapCache">
            <Grid.RenderTransform>
                <CompositeTransform x:Name="TopApplicationPanelTransform" TranslateY="-72"/>
            </Grid.RenderTransform>
            <Border Background="Black" Opacity="0.3"/>

            <Grid x:Name="TopAppBarPlaceholder" Height="72">
                <Image Visibility="{Binding CurrentItem.HasStickers, FallbackValue=Collapsed}" Source="/Images/Dialogs/chat.masks.png" 
                    VerticalAlignment="Top" HorizontalAlignment="Right" 
                    Tap="AttachedStickers_OnTap"
                    Margin="6"/>
                
                <TextBlock Text="{Binding Title}" Margin="18,0" Style="{StaticResource ApplicationTitleStyle}"/>

                <controls:SecretPhotoPlaceholder 
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="0,-18"
                    Width="72" Height="72" 
                    ShowHint="False"
                    RenderTransformOrigin="0.5, 0.5"
                    Visibility="{Binding IsInputTTL, Converter={StaticResource BooleanToVisibilityConverter}}"
                    TTLParams="{Binding CurrentItem.Media.TTLParams}">
                    <controls:SecretPhotoPlaceholder.RenderTransform>
                        <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                    </controls:SecretPhotoPlaceholder.RenderTransform>
                </controls:SecretPhotoPlaceholder>
            </Grid>
        </Grid>

        <Grid VerticalAlignment="Bottom" x:Name="ApplicationPanel" CacheMode="BitmapCache" Margin="0,0,0,-72">
            <Grid.RenderTransform>
                <CompositeTransform x:Name="ApplicationPanelTransform" TranslateY="72"/>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="4" Background="Black" Opacity="0.3"/>
            
            <Grid Visibility="{Binding CurrentItem.Message, Converter={StaticResource EmptyTLStringToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Collapsed}">
                <emojiPanel:TelegramRichTextBox
                    Width="462"
                    Margin="9,12,9,0"
                    MaxHeight="328"
                    Text="{Binding CurrentItem.Message}"
                    HorizontalAlignment="Stretch"
                    Foreground="White"
                    FontSize="{StaticResource PhoneFontSizeNormal}"
                    Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
            </Grid>

            <!--<Canvas x:Name="Canvas" Grid.Row="1" Height="68" IsHitTestVisible="False" Visibility="{Binding GroupedItems.Count, Converter={StaticResource CountMoreThanToVisibilityConverter}, ConverterParameter=0}">
                <controls:RibbonControl x:Name="Ribbon" Visibility="Visible" ItemsSource="{Binding GroupedItems}" Margin="240,6,0,6"/>
            </Canvas>-->
            
            <Grid Grid.Row="2" x:Name="AppBarPlaceholder" Height="72">
                <StackPanel Margin="10,0,0,0" VerticalAlignment="Center">
                    <TextBlock x:Name="FullName" Text="{Binding CurrentItem.From.FullName2}" Foreground="White" Height="26.6" Style="{StaticResource PhoneTextNormalStyle}">
                        <TextBlock.RenderTransform>
                            <CompositeTransform/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock x:Name="Date" Margin="12,-5,12,0" Text="{Binding CurrentItem.Date, Converter={StaticResource MessageDateTimeConverter}}" Foreground="#99FFFFFF" Style="{StaticResource PhoneTextSubtleStyle}">
                        <TextBlock.RenderTransform>
                            <CompositeTransform/>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="3" x:Name="AppBarPlaceholder2" Height="72"/>
        </Grid>
    </Grid>
</views:TelegramViewBase>