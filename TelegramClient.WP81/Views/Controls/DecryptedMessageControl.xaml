<UserControl x:Class="TelegramClient.Views.Controls.DecryptedMessageControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:emojiPanel="clr-namespace:Telegram.EmojiPanel"
    xmlns:micro="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
    xmlns:dialogs="clr-namespace:TelegramClient.Views.Dialogs"
    xmlns:views="clr-namespace:TelegramClient.Views"
    xmlns:controls="clr-namespace:TelegramClient.Views.Controls"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:templateSelectors="clr-namespace:TelegramClient.Helpers.TemplateSelectors"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}">

    <UserControl.Resources>
        <SolidColorBrush x:Key="FailedMessageBackgroundBrush" Color="#FFFCE4E6"/>
        <SolidColorBrush x:Key="FailedMessageBorderBrush" Color="#33ED4C59"/>
        <SolidColorBrush x:Key="FailedMessageForegroundBrush" Color="#FFCD7C83"/>
        
        <SolidColorBrush x:Key="ServiceMessageBackgroundBrush" Color="#59597289"/>
        <SolidColorBrush x:Key="ServiceMessageBorderBrush" Color="#59597289"/>
        <SolidColorBrush x:Key="ServiceMessageForegroundBrush" Color="#FFFFFFFF"/>
        
        <SolidColorBrush x:Key="OutputBackgroundBrushLight" Color="#FFE3F4FF"/>
        <SolidColorBrush x:Key="OutputBorderBrushLight" Color="#6686A9C9"/>
        <SolidColorBrush x:Key="OutputSubtleBrushLight" Color="#FF7C9FBA"/>
        <SolidColorBrush x:Key="OutputForegroundBrushLight" Color="#FF000000"/>
        <SolidColorBrush x:Key="InputBackgroundBrushLight" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="InputBorderBrushLight" Color="#4D86A9C9"/>
        <SolidColorBrush x:Key="InputSubtleBrushLight" Color="#FF93989D"/>
        <SolidColorBrush x:Key="InputForegroundBrushLight" Color="#FF000000"/>
        <SolidColorBrush x:Key="StickerFooterBackgroundBrushLight" Color="#49496A95"/>
        <SolidColorBrush x:Key="StickerFooterSubtleBrushLight" Color="#FFFFFFFF"/>

        <SolidColorBrush x:Key="OutputBackgroundBrushDark" Color="#FF2B2B2B"/>
        <SolidColorBrush x:Key="OutputBorderBrushDark" Color="#0086A9C9"/>
        <SolidColorBrush x:Key="OutputSubtleBrushDark" Color="#FFA0A0A0"/>
        <SolidColorBrush x:Key="OutputForegroundBrushDark" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="InputBackgroundBrushDark" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="InputBorderBrushDark" Color="#0086A9C9"/>
        <SolidColorBrush x:Key="InputSubtleBrushDark" Color="#FF93989D"/>
        <SolidColorBrush x:Key="InputForegroundBrushDark" Color="#FF000000"/>
        <SolidColorBrush x:Key="StickerFooterBackgroundDark" Color="#49496A95"/>
        <SolidColorBrush x:Key="StickerFooterBackgroundBrushDark" Color="#49496A95"/>
        <SolidColorBrush x:Key="StickerFooterSubtleBrushDark" Color="#FFFFFFFF"/>
        
        <DataTemplate x:Key="SecretPhotoTemplate">
            <Grid Margin="-10,-4,-10,2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid Width="256" Height="256">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="1" Width="256" Height="256" Background="#66000000">
                        <Image Source="{Binding Self, Converter={StaticResource ForcePhotoConverter}}" Opacity="0" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="1"/>
                        <Image Source="{Binding Converter={StaticResource SecretPhotoToThumbConverter}}" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <controls:SecretPhotoPlaceholder 
                            Width="256" Height="256"
                            ShowHint="False"
                            TTLParams="{Binding TTLParams}" 
                            DownloadingProgress="{Binding DownloadingProgress}"
                            UploadingProgress="{Binding UploadingProgress}"
                            StartTimer="SecretPhotoPlaceholder_OnStartTimer" 
                            Elapsed="SecretPhotoPlaceholder_OnElapsed"
                            micro:Message.Attach="[Event CancelUploading] = [Action CancelUploading($DataContext)]; [Event CancelDownloading] = [Action CancelPhotoDownloading($DataContext)]"/>

                        <!--<Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4" Background="#7F000000">
                            <TextBlock Margin="6,1,6,2"
					        Text="{Binding TTL, Converter={StaticResource TTLMediaToTimerStringConverter}}"
					        Foreground="White"
					        FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"/>
                        </Grid>-->
                    </Grid>
                </Grid>

                <emojiPanel:TelegramRichTextBox
                    Grid.Row="1"
                    Width="335"
                    Margin="-6,0"
                    MaxHeight="400"
                    Visibility="{Binding Caption, Converter={StaticResource EmptyTLStringToVisibilityConverter}, ConverterParameter=invert, FallbackValue=Collapsed}"
                    Text="{Binding Caption}"
                    HorizontalAlignment="Stretch"
                    Background="{Binding Converter={StaticResource OverlayAccentBrush}}"
                    TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"
                    FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                    Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
            </Grid>
        </DataTemplate>

        <templateSelectors:DecryptedWebPageMediaTemplateSelector
            x:Key="DecryptedWebPageMediaTemplateSelector"
            EmptyTemplate="{StaticResource MediaEmptyTemplate}"
            WebPageTemplate="{StaticResource WebPageMediaTemplate}"
            WebPageSmallPhotoTemplate="{StaticResource WebPageSmallPhotoMediaTemplate}"
            WebPagePhotoTemplate="{StaticResource WebPagePhotoMediaTemplate}"
            WebPagePendingTemplate="{StaticResource WebPagePendingMediaTemplate}"
            WebPageGifTemplate="{StaticResource WebPageGifMediaTemplate}"
            UnsupportedTemplate="{StaticResource UnsupportedTemplate}"/>

        <DataTemplate x:Key="WebPageTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ContentControl Grid.Row="1" Content="{Binding}" MaxHeight="1500" ContentTemplate="{Binding Converter={StaticResource DecryptedWebPageMediaTemplateSelector}}"/>
            </Grid>
        </DataTemplate>

        <templateSelectors:DecryptedMediaTemplateSelector
                x:Key="DecryptedMediaTemplateSelector"
                EmptyTemplate="{StaticResource MediaEmptyTemplate}"
                GroupTemplate="{StaticResource GroupTemplate}"
                StickerTemplate="{StaticResource StickerTemplate}"
                ContactTemplate="{StaticResource ContactTemplate}"
                PhotoTemplate="{StaticResource PhotoTemplate}"
                SecretPhotoTemplate="{StaticResource SecretPhotoTemplate}"
                VideoTemplate="{StaticResource VideoTemplate}"
                GeoPointTemplate="{StaticResource GeoPointTemplate}"
                VenueTemplate="{StaticResource VenueTemplate}"
                DocumentTemplate="{StaticResource DocumentTemplate}"
                GifTemplate="{StaticResource GifTemplate}"
                AudioTemplate="{StaticResource AudioTemplate}"
                WebPageTemplate="{StaticResource WebPageTemplate}"
                UnsupportedTemplate="{StaticResource UnsupportedTemplate}"/>
    </UserControl.Resources>

    <Grid x:Name="MainItemGrid2">

        <Grid x:Name="MainItemGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="18"/>
                <ColumnDefinition x:Name="BeforeLastColumn" Width="Auto"/>
                <ColumnDefinition x:Name="LastColumn" Width="*"/>
                <ColumnDefinition Width="18"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="6"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <views:ConversationTileControl 
                x:Name="Tile"
                Tap="Tile_OnTap"
                Grid.Column="1" Grid.Row="1"
                Margin="18,0,4,0" VerticalAlignment="Top"
                Size="45" LabelFontSize="19"
                Source="{Binding From.Photo, Converter={StaticResource DefaultPhotoConverter}}"
                Fill="{Binding From.Index, Converter={StaticResource PlaceholderBackgroundConverter}}"
                Text="{Binding From, Converter={StaticResource PlaceholderDefaultTextConverter}}"/>

            <Border x:Name="CornerBorder" Grid.Column="2" Grid.Row="1" Margin="0,0,0,6" BorderBrush="{StaticResource InputBorderBrushLight}" BorderThickness="0,0,1,0"/>
            <Path x:Name="Corner" 
                  Grid.Column="2" Grid.Row="1" 
                  HorizontalAlignment="Right" 
                  Margin="0,12,-1,0" 
                  VerticalAlignment="Top" 
                  Data="F1 M12,12 L0,0 L12,0" 
                  Width="12" Height="12" 
                  Stretch="Fill" 
                  Fill="{StaticResource InputBackgroundBrushLight}" 
                  StrokeThickness="1" 
                  Stroke="{StaticResource InputBorderBrushLight}"
                  RenderTransformOrigin="0.5, 0.5">
                <Path.RenderTransform>
                    <ScaleTransform x:Name="PathScaleTransform" ScaleX="1"/>
                </Path.RenderTransform>
            </Path>

            <Border x:Name="MainBorder" Grid.Column="3" Grid.Row="1" Margin="0,0,0,6" Background="{StaticResource InputBackgroundBrushLight}" BorderBrush="{StaticResource InputBorderBrushLight}" BorderThickness="0,1,1,1">
                <StackPanel x:Name="Panel">
                    <Border x:Name="Header" MaxWidth="335" Margin="0,0,0,-6" Background="{StaticResource InputBackgroundBrushLight}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Visibility="Collapsed">
                        <StackPanel x:Name="CaptionPanel" Margin="12,6">
                            <toolkit:WrapPanel x:Name="FromLabelPanel">
                                <TextBlock x:Name="FromLabel"
                                    Text="{Binding From.FullName, Converter={StaticResource NonBreakingStringConverter}}"
                                    Foreground="{Binding From.Index, Converter={StaticResource PlaceholderBackgroundConverter}}"
                                    MaxWidth="293"
                                    TextTrimming="WordEllipsis"
                                    Margin="0,2,0,0"
                                    Style="{StaticResource ReplyCaptionStyle}"/>
                            </toolkit:WrapPanel>
                            <!--<TextBlock x:Name="FwdFromGrid" Margin="0" FontSize="20" TextWrapping="Wrap" TextTrimming="WordEllipsis" Foreground="{StaticResource TelegramTextAccentBrush}" 
                                micro:Message.Attach="[Event Tap] = [Action OpenFwdContactDetails($DataContext)]">
                                <Run Text="{Binding Resources.ForwardedMessage, Source={StaticResource Strings}}"/>
                                <Run x:Name="FwdFromLabel" Text="{Binding FwdFrom.FullName}" FontWeight="SemiBold"/>
                            </TextBlock>-->
                            <TextBlock 
                                x:Name="ViaBotGrid"
                                Tap="ViaBot_Tap" 
                                Text="{Binding ViaBotName, Converter={StaticResource DecryptedViaBotToStringConverter}}" 
                                Margin="0,-6,0,0" 
                                Foreground="{StaticResource TelegramTextAccentBrush}" 
                                FontSize="20"/>

                            <ContentControl 
                                x:Name="ReplyContent"
                                Canvas.ZIndex="2"
                                micro:Message.Attach="[Event Tap] = [Action OpenReply($DataContext)]"
                                Content="{Binding ReplyInfo.Reply}" 
                                Margin="0"
                                ContentTemplate="{Binding ReplyInfo, Converter={StaticResource DecryptedReplyTemplateSelector}}"
                                HorizontalContentAlignment="Stretch"/>
                        </StackPanel>
                    </Border>
                    <Grid x:Name="MessageGrid" Canvas.ZIndex="2" Margin="0,6,0,0">
                        <Grid>
                            <emojiPanel:TelegramRichTextBox
                                x:Name="InputMessage"
                                MaxHeight="1500"
                                MinWidth="100"
                                MaxWidth="335"
                                Visibility="{Binding Media, Converter={StaticResource GeoLocationToVisibilityConverter}}"
                                Entities="{Binding Entities}"
                                Text="{Binding Message}"
                                FooterFontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                emojiPanel:BrowserNavigationService.DecryptedMessage="{Binding}"
                                TextScaleFactor="{Binding TextScaleFactor, Source={StaticResource ScaledText}}"
                                MoreElement="{Binding ElementName=MorePanel}"
                                FontSize="{Binding DefaultFontSize, Source={StaticResource ScaledText}}"
                                Style="{StaticResource MessageBodyTelegramRichTextStyle}"/>
                            <Border x:Name="MorePanel" Background="{StaticResource InputBackgroundBrushLight}" VerticalAlignment="Bottom" Canvas.ZIndex="3" Visibility="Collapsed" Tap="MorePanel_OnTap">
                                <TextBlock Canvas.ZIndex="4"
                                    Text="{Binding Resources.More, Source={StaticResource Strings}, StringFormat='\{0\}...'}" 
                                    TextDecorations="Underline" 
                                    Margin="12,-6,12,0"
                                    FontFamily="{StaticResource PhoneFontFamilyNormal}" 
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid x:Name="MediaGrid">
                        <ContentControl
                            x:Name="MediaContentControl"
                            MaxHeight="1500"
                            Background="Transparent"
                            Tap="MediaContentControl_OnTap"
                            Margin="12,0,12,0"
                            HorizontalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Content="{Binding Media}"
                            ContentTemplate="{Binding MediaSelf, Converter={StaticResource DecryptedMediaTemplateSelector}}"/>
                    </Grid>
                    <Border x:Name="Footer"
                        MaxWidth="335"
                        Margin="0,-1,0,0" 
                        Canvas.ZIndex="1" 
                        VerticalAlignment="Bottom"
                        Background="{StaticResource InputBackgroundBrushLight}"
                        IsHitTestVisible="False">
                        <ContentControl x:Name="FooterContent" HorizontalContentAlignment="Stretch">
                            <Grid x:Name="FooterContentGrid" Margin="6,2,6,6" HorizontalAlignment="Right">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!--<TextBlock Grid.Column="0" Margin="0,-1,0,2" 
                                    Text="{Binding Status, Converter={StaticResource MessageStatusConverter}}"
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"/>-->
                                <!--<TextBlock Grid.Column="1" Margin="0,-1,0,2" micro:Message.Attach="[Event Tap] = [Action Resend($DataContext)]"
                                    Text="{Binding Resources.Retry, Source={StaticResource Strings}, StringFormat='\{0\}'}" 
                                    TextDecorations="Underline"
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"
                                    Visibility="{Binding Status, Converter={StaticResource StringEqualsToVisibilityConverter}, ConverterParameter=Failed}"/>-->
                                
                                <!--<TextBlock x:Name="EditLabel" Grid.Column="4" Margin="0,2" Visibility="{Binding EditDateVisibility}"
                                    Text=" "
                                    FontSize="{Binding DefaultSystemSegoeUISymbolFontSize, Source={StaticResource ScaledText}}"
                                    FontFamily="Segoe UI Symbol"/>-->
                                <TextBlock Grid.Column="5" Margin="0,-1,0,2" 
                                    Text="{Binding Date, Converter={StaticResource MessageDateTimeConverter}, StringFormat=' \{0\} '}"
                                    FontSize="{Binding DefaultSystemFontSize, Source={StaticResource ScaledText}}"/>
                                <Viewbox Grid.Column="6" Margin="0,6,6,6" Height="{Binding DefaultSystemIconSize, Source={StaticResource ScaledText}}">
                                    <controls:StatusControl
                                        x:Name="Status"
                                        Status="{Binding Status}"
                                        Fill="{StaticResource OutputSubtleBrushLight}"/>
                                </Viewbox>
                            </Grid>
                        </ContentControl>
                    </Border>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</UserControl>